---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: webdav-data-pvc
  namespace: webdav
  annotations:
    volumeType: local
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
  storageClassName: local-path-customized
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webdav-deployment
  namespace: webdav
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: webdav
  template:
    metadata:
      labels:
        app: webdav
    spec:
      containers:
        - name: webdav
          image: loganmarchione/docker-webdav-nginx:0.2.0
          ports:
            - containerPort: 80
          env:
            - name: WEBDAV_USER
              valueFrom:
                secretKeyRef:
                  name: webdav-secret-vars
                  key: WEBDAV_USER
            - name: WEBDAV_PASS
              valueFrom:
                secretKeyRef:
                  name: webdav-secret-vars
                  key: WEBDAV_PASS
          volumeMounts:
            - name: data
              mountPath: /var/www/webdav
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: webdav-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: webdav-service
  namespace: webdav
spec:
  type: ClusterIP
  ports:
    - name: http
      targetPort: 80
      port: 80
      protocol: TCP
  selector:
    app: webdav
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webdav-ingress
  namespace: webdav
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  rules:
    - host: webdav.${SECRET_INTERNAL_DOMAIN_NAME}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webdav-service
                port:
                  number: 80
  tls:
    - hosts:
        - webdav.${SECRET_INTERNAL_DOMAIN_NAME}
      secretName: webdav-tls
