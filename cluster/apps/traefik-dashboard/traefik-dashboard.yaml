---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: traefik-auth
  namespace: kube-system
spec:
  basicAuth:
    secret: traefik-secret-vars
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard-service
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9102"
    prometheus.io/path: /metrics
    prometheus.io/scheme: http
spec:
  type: ClusterIP
  ports:
    - name: http
      targetPort: traefik
      port: 9000
      protocol: TCP
    - name: metrics
      targetPort: 9100  # Still target port 9100 inside the pod
      port: 9102        # But expose it as port 9102 on the service (avoiding conflict)
      protocol: TCP
  selector:
    app.kubernetes.io/instance: traefik-kube-system
    app.kubernetes.io/name: traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-dashboard-ingress
  namespace: kube-system
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    cert-manager.io/private-key-algorithm: RSA
    cert-manager.io/private-key-size: "4096"
    cert-manager.io/private-key-rotation-policy: Always
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-traefik-auth@kubernetescrd
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  rules:
    - host: traefik-k3s.${SECRET_INTERNAL_DOMAIN_NAME}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: traefik-dashboard-service
                port:
                  number: 9000
          - path: /metrics
            pathType: Prefix
            backend:
              service:
                name: traefik-dashboard-service
                port:
                  number: 9102
  tls:
    - hosts:
        - traefik-k3s.${SECRET_INTERNAL_DOMAIN_NAME}
      secretName: traefik-dashboard-tls
